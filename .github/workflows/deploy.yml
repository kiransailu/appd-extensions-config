name: Deploy Static Site to GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write
  actions: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Clean up old artifacts
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const artifacts = await github.rest.actions.listArtifactsForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                per_page: 50
              });
              
              // Delete old github-pages artifacts (keep only latest 2)
              const githubPagesArtifacts = artifacts.data.artifacts
                .filter(artifact => artifact.name === 'github-pages')
                .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))
                .slice(2); // Keep latest 2, delete rest
              
              for (const artifact of githubPagesArtifacts) {
                console.log(`Deleting old artifact: ${artifact.name} (ID: ${artifact.id})`);
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id
                });
              }
            } catch (error) {
              console.log('Cleanup failed, continuing with deployment:', error.message);
            }
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4